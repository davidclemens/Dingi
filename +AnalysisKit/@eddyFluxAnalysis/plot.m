function varargout = plot(obj,type,varargin)
% PLOT


    import GraphKit.getMaxFigureSize
    import GraphKit.Colormaps.cbrewer.cbrewer
    import internal.stats.parseArgs

    nvarargin   = numel(varargin);

    if nargin - nvarargin < 2
        type = 'tilt correction';
    end

    % parse Name-Value pairs
    optionName          = {'FontSize','TitleFontSizeMultiplier','LabelFontSizeMultiplier'}; % valid options (Name)
    optionDefaultValue  = {10,1,1}; % default value (Value)
    [fontSize,...
     titleFontSizeMultiplier,...
     labelFontSizeMultiplier,...
    ]	= parseArgs(optionName,optionDefaultValue,varargin{:}); % parse function arguments


    hsp                         = gobjects();
    hlgnd                       = gobjects();
    hp                          = gobjects();

    cmap                        = cbrewer('qual','Set1',7);
    fOutFigName                 = [type];
    Menubar                     = 'figure';
    Toolbar                     = 'auto';
    maxFigureSize               = getMaxFigureSize('Menubar',Menubar);

    figNums     = 30 + (0:3);
    switch type
        case 'tilt correction'
            fig     = figNums(1);
            hfig    = figure(fig);
            set(hfig,...
                'Visible',      'off');
            clf

            PaperHeight                 = maxFigureSize(2);
            PaperWidth                  = PaperHeight/2;
            PaperPos                    = [PaperWidth PaperHeight];
            MarginOuter                 = 0.5;
            MarginInner                 = 0.5;  % cm

            set(hfig,...
                'Name',                 fOutFigName,...
                'Menubar',              Menubar,...
                'Toolbar',              Toolbar,...
                'PaperSize',            PaperPos,...
                'PaperOrientation',     'Portrait')

            spnx                        = 2;
            spny                        = 4;
            spi                         = reshape(1:spnx*spny,spnx,spny)';

            MarkerColor 	= [0.5 0.5]'.*ones(1,3);
            data            = {obj.Velocity,obj.VelocityRaw};
            titleString     = {'tilt corrected','raw'};
            viewXYZ         = [diag(ones(1,3));ones(1,3)];
            viewXYZ(2,2)    = -1;
            skipPoints      = 100;

            limits          = cellfun(@(d) cat(2,nanmin(d(1:skipPoints:end,:),[],1)',nanmax(d(1:skipPoints:end,:),[],1)'),data,'un',0);
            limits          = cat(1,limits{:});
            limits          = 1.02.*[-1 1].*max(abs(limits(:)));

          	for col = 1:spnx
                ver = col;
                for row = 1:spny
                    v   = row;
                    hsp(spi(row,col))   = subplot(spny,spnx,spi(row,col),...
                                            'NextPlot',                 'add',...
                                            'Layer',                    'top',...
                                            'Box',                      'off',...
                                            'FontSize',                 fontSize,...
                                            'TitleFontSizeMultiplier',  titleFontSizeMultiplier,...
                                            'LabelFontSizeMultiplier',  labelFontSizeMultiplier,...
                                            'TitleFontWeight',          'normal',...
                                            'TickDir',                  'out',...
                                            'ColorOrder',               cmap,...
                                            'DataAspectRatio',          ones(1,3));

                        % plot tilt corrected velocity
                        XData   = data{ver}(1:skipPoints:end,1);
                        YData   = data{ver}(1:skipPoints:end,2);
                        ZData   = data{ver}(1:skipPoints:end,3);
                        scatter3(XData,YData,ZData,...
                            'Marker',               '.',...
                            'MarkerEdgeColor',      MarkerColor(ver,:))

                        % plot coordinate system axes
                        s = limits(2);
                        
                        for win = 1:obj.WindowN
                            i = obj.CoordinateSystemUnitVectors(1,:,win).*s;
                            j = obj.CoordinateSystemUnitVectors(2,:,win).*s;
                            k = obj.CoordinateSystemUnitVectors(3,:,win).*s;
                            % new
                            plot3([0,i(1)],[0,i(2)],[0,i(3)],'r','LineWidth',0.5)
                            plot3([0,j(1)],[0,j(2)],[0,j(3)],'g','LineWidth',0.5)
                            plot3([0,k(1)],[0,k(2)],[0,k(3)],'b','LineWidth',0.5)
                        end
                        % old
                        plot3([0,1].*s,[0,0].*s,[0,0].*s,'r','LineWidth',2)
                        plot3([0,0].*s,[0,1].*s,[0,0].*s,'g','LineWidth',2)
                        plot3([0,0].*s,[0,0].*s,[0,1].*s,'b','LineWidth',2)

                        xlim(limits)
                        ylim(limits)
                        zlim(limits)
                        xlabel('u')
                        ylabel('v')
                        zlabel('w')

                        view(viewXYZ(v,:))


                        if row == 1
                            title(titleString{ver})
                        end
%                         if any(row == 1:2)
%                             set(hsp(spi(row,col)),...
%                                 'XTickLabel',   {''},...
%                                 'YTickLabel',   {''})
%                         end
%                         if col == 2 && row < spny
%                             set(hsp(spi(row,col)),...
%                                 'YTickLabel',   {''},...
%                                 'ZTickLabel',   {''})
%                         end
                end
            end
        case 'cross correlation'
            fig     = figNums(2);
            hfig    = figure(fig);
            set(hfig,...
                'Visible',      'off');
            clf

            PaperWidth                  = maxFigureSize(1);
            PaperHeight                 = PaperWidth/8;
            PaperPos                    = [PaperWidth PaperHeight];
            MarginOuter                 = 0.5;
            MarginInner                 = 0.5;  % cm

            set(hfig,...
                'Name',                 fOutFigName,...
                'Menubar',              Menubar,...
                'Toolbar',              Toolbar,...
                'PaperSize',            PaperPos,...
                'PaperOrientation',     'Portrait')

            spnx                        = 1;
            spny                        = 1;
            spi                         = reshape(1:spnx*spny,spnx,spny)';

            data    = {obj.W_.*obj.FluxParameter_(:,1),obj.W_.*obj.FluxParameter_(:,2)};
            clr     = {'r','b'};
          	for col = 1:spnx
                for row = 1:spny
                    hsp(spi(row,col))   = subplot(spny,spnx,spi(row,col),...
                                            'NextPlot',                 'add',...
                                            'Layer',                    'top',...
                                            'Box',                      'off',...
                                            'FontSize',                 fontSize,...
                                            'TitleFontSizeMultiplier',  titleFontSizeMultiplier,...
                                            'LabelFontSizeMultiplier',  labelFontSizeMultiplier,...
                                            'TitleFontWeight',          'normal',...
                                            'TickDir',                  'out',...
                                            'ColorOrder',               cmap);
                    for dat = 1:numel(data)
                        % plot tilt corrected velocity
                        XData   = (obj.Time - obj.Time(1)).*(24*60*60);
                        YData   = data{dat};

                        plot(XData,YData,clr{dat})
                    end

                        xlabel('time')
                        ylabel('w''C'' (mmol m^{-2} s^{-1})')
                end
            end
        case 'horizontal velocity'
            fig     = figNums(3);
            hfig    = figure(fig);
            set(hfig,...
                'Visible',      'on');
            clf
            
            PaperWidth                  = maxFigureSize(1)/2;
            PaperHeight                 = PaperWidth;
            PaperPos                    = [PaperWidth PaperHeight];
            MarginOuter                 = [0.5 0.5 3 0.5];
            MarginInner                 = 0.5;  % cm

            set(hfig,...
                'Name',                 fOutFigName,...
                'Menubar',              Menubar,...
                'Toolbar',              Toolbar,...
                'PaperSize',            PaperPos,...
                'PaperOrientation',     'Portrait')

            spnx                        = 1;
            spny                        = 1;
            spi                         = reshape(1:spnx*spny,spnx,spny)';

          	for col = 1:spnx
                for row = 1:spny
                    hsp(spi(row,col))   = subplot(spny,spnx,spi(row,col),...
                                            'NextPlot',                 'add',...
                                            'Layer',                    'top',...
                                            'Box',                      'off',...
                                            'FontSize',                 fontSize,...
                                            'TitleFontSizeMultiplier',  titleFontSizeMultiplier,...
                                            'LabelFontSizeMultiplier',  labelFontSizeMultiplier,...
                                            'TitleFontWeight',          'normal',...
                                            'TickDir',                  'out',...
                                            'ColorOrder',               cmap,...
                                            'DataAspectRatio',          ones(1,3));
                    % plot horizontal velocity path
                    XData   = cumsum(obj.VelocityRaw(:,1))./obj.Frequency;
                    YData   = cumsum(obj.VelocityRaw(:,2))./obj.Frequency;
                    CData   = obj.TimeRaw - obj.TimeRaw(1);

%                     plot(XData,YData)
                    patch([XData;NaN],[YData;NaN],[CData;NaN],[CData;NaN],...
                        'EdgeColor',    'interp',...
                        'Marker',       'none',...
                        'LineWidth',    1);
                    xlabel('x (m)')
                    ylabel('y (m)')
                    
                    colorbar()
                end
            end
        case 'default'
            fig     = figNums(4);
            hfig    = figure(fig);
            set(hfig,...
                'Visible',      'on');
            clf
            
            spnx                        = 1;
            spny                        = 6;
            spi                         = reshape(1:spnx*spny,spnx,spny)';
            
            PaperWidth                  = maxFigureSize(1);
            PaperHeight                 = 0.25.*PaperWidth.*spny;
            PaperPos                    = [PaperWidth PaperHeight];
            MarginOuter                 = [0.5 0.5 0.5 0.5];
            MarginInner                 = 0.1;  % cm

            set(hfig,...
                'Name',                 fOutFigName,...
                'Menubar',              Menubar,...
                'Toolbar',              Toolbar,...
                'PaperSize',            PaperPos,...
                'PaperOrientation',     'Portrait')

            timeOrigin  = obj.TimeRaw(1);
            timeRel     = reshape(obj.Time - timeOrigin,[],1);
            timeRelRaw  = reshape(obj.TimeRaw - timeOrigin,[],1);
            
            XData   = {cumsum(obj.VelocityRaw(:,1))./obj.Frequency,...
                       timeRel,...
                       timeRel,...
                       timeRel,...
                       timeRel,...
                       timeRel,...
                       timeRel};
            XLabel  = {'x (m)',...
                       'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)'};
            YData   = {cumsum(obj.VelocityRaw(:,2))./obj.Frequency,...
                       reshape(obj.Velocity(:,:,3),[],1),...
                       reshape(obj.Velocity(:,:,1),[],1),...
                       reshape(obj.Velocity(:,:,2),[],1),...
                       reshape(obj.FluxParameter_(:,:,1),[],1),...
                       reshape(obj.FluxParameter_(:,:,2),[],1)};
            YLabel  = {'y (m)',...
                       'w (m s^{-1}',...
                       'u (m s^{-1}',...
                       'v (m s^{-1}',...
                       'Pico 1 [O_2] (µM)',...
                       'Pico 2 [O_2] (µM)'};
            CData   = {timeRelRaw,...
                       XData{2},...
                       XData{2},...
                       XData{2},...
                       XData{2},...
                       XData{2}};
            CLabel  = {'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)',...
                       'rel. time (d)'};
            LineWidth   = [4,0.5,0.5,0.5,0.5,0.5];
                   
            
          	for col = 1:spnx
                for row = 1:spny
                    dat = row;
                    hsp(spi(row,col))   = subplot(spny,spnx,spi(row,col),...
                                            'NextPlot',                 'add',...
                                            'Layer',                    'top',...
                                            'Box',                      'off',...
                                            'FontSize',                 fontSize,...
                                            'TitleFontSizeMultiplier',  titleFontSizeMultiplier,...
                                            'LabelFontSizeMultiplier',  labelFontSizeMultiplier,...
                                            'TitleFontWeight',          'normal',...
                                            'TickDir',                  'in',...
                                            'ColorOrder',               cmap);
                    
                    patch([XData{dat};NaN],[YData{dat};NaN],[CData{dat};NaN],[CData{dat};NaN],...
                        'EdgeColor',    'interp',...
                        'Marker',       'none',...
                        'LineWidth',    LineWidth(dat));
                    
                    colormap(cbrewer('qual','Paired',obj.WindowN));
                    
                    xlabel(XLabel{dat})
                    ylabel(YLabel{dat})
                    
                end
            end
        otherwise
            error('Dingi:GearKit:eddyFluxAnalysis:plot:unknownPlotType',...
                'unknown plot type')
    end
    TightFig(hfig,hsp,spi,PaperPos,MarginOuter,MarginInner);
    set(hfig,...
        'Visible',      'on');
end
